# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# append to the history file, don't overwrite it
shopt -s histappend

shopt -s cdspell

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

export MAILCHECK=-1
export HISTCONTROL=ignoredups
export HISTSIZE=100000

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh /usr/bin/lesspipe)"

# colorfull prompt:
# 30: Black/Dark grey
# 31: Red
# 32: Green
# 33: Yellow
# 34: Blue
# 35: Magenta
# 36: Fuscia
# 37: White/light grey
# 38: "Default" foreground color

if [ $SHELL = "/bin/bash" ]
then
    case $TERM in
        uxterm*|xterm*|rxvt*|linux|screen*)
            PS1='\[\033[01;34m\]\u@\h:\[\033[01;33m\]\w\[\e[01;$(($??31:37))m\] \$ \[\033[00m\]'
            ;;
    esac
fi

if [ "$TERM" != "dumb" ] && [ -x /usr/bin/dircolors ]
then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

TERMINALSESSIONID=`echo $RANDOM-$RANDOM-$RANDOM-$RANDOM-$RANDOM-$RANDOM | md5sum`
TERMINALSESSIONID="$WINDOW $TERMINALSESSIONID"

HISTORY_FILE=~/.history.log
_append_history () {
  local LAST_CMD=$(history 1)
  # strip useless entry number from the beginning
  LAST_CMD=${LAST_CMD#*  }
  echo "$TERMINALSESSIONID>   cd $(pwd);     $LAST_CMD;          # $(date) " >> $HISTORY_FILE
}

_update_window_title () {
    echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"
}

# Maintain $HISTORY_FILE and if this is an xterm set the title to
# user@host:dir
case $TERM in
    uxterm*|xterm*|rxvt*)
        PROMPT_COMMAND="_append_history; history -a; _update_window_title"
        ;;
    *)
        PROMPT_COMMAND="_append_history; history -a"
        ;;
esac

alias ll='ls -l'
alias la='ls -A'
alias l='ls -CFhla'
alias r='readlink -e'

alias e=$EDITOR

function rsync_mirror {
    rsync -avzP --inplace -e 'ssh -o ClearAllForwardings=yes' "$@"
}

function server {
    local PORT="${1:-8000}"
    echo "http://localhost:$PORT"
    python -m SimpleHTTPServer $PORT
}

export PATH=$PATH:~/sd/git-static/bin/

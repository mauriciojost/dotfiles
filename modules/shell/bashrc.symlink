# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return


# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

TERMINALSESSIONID=`echo $RANDOM-$RANDOM-$RANDOM-$RANDOM-$RANDOM-$RANDOM | md5sum`

CUSTOM_HISTORY_FILE=$HOME/.history.log
_append_history () {
  local LAST_CMD=$(history 1)
  # strip useless entry number from the beginning
  LAST_CMD=${LAST_CMD#*  }
  echo "$TERMINALSESSIONID>   cd $(pwd);     $LAST_CMD;          # $(date) " >> $CUSTOM_HISTORY_FILE
}

# Overwrite above settings.
export HISTCONTROL=ignoredups:ignorespace
export HISTSIZE=100000
# export HISTTIMEFORMAT="%D %T "
# export HISTIGNORE="&:ls:exit"

# Add command to the history file as soon as it is typed
PROMPT_COMMAND="_append_history; history -a;$PROMPT_COMMAND"

# append to the history file, don't overwrite it
shopt -s histappend

# PATH configuration

# shortcut to this dotfiles path is $DOTFILES
export DOTFILES="$HOME/.dotfiles"

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
echo "Running .localrc ..."
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi


# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# Load stderred to display stderr in red
STDERRRED_LIB="$DOTFILES/modules/stderrred/stderred/build/libstderred.so"
if [ -e "$STDERRRED_LIB" ] 
then
  export LD_PRELOAD="$STDERRRED_LIB"
else
  echo "Stderred skipped"
fi

# Load highlighter module 'highlight red pattern'
DEV_SHELL_ESSENTIALS_SCRIPT="$DOTFILES/modules/dev-shell-essentials/dev-shell-essentials.sh"
if [ -e "$DEV_SHELL_ESSENTIALS_SCRIPT" ] 
then
  source $DEV_SHELL_ESSENTIALS_SCRIPT
else
  echo "Dev shell essentials skipped"
fi

# Allow reverse-i-search (ctrl-r) and i-search (ctrl+s)
stty -ixon

# Welcome message
date
echo "Welcome "$USER"!!!"
echo "Smart history file at: $CUSTOM_HISTORY_FILE"

